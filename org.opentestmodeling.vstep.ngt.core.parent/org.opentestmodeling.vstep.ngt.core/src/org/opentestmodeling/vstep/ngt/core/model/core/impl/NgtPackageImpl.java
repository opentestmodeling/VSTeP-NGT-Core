/**
 */
package org.opentestmodeling.vstep.ngt.core.model.core.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.opentestmodeling.vstep.ngt.core.model.core.CorePackage;
import org.opentestmodeling.vstep.ngt.core.model.core.NgtNode;
import org.opentestmodeling.vstep.ngt.core.model.core.NgtPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ngt Package</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.opentestmodeling.vstep.ngt.core.model.core.impl.NgtPackageImpl#getUid <em>Uid</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.core.model.core.impl.NgtPackageImpl#getStereoType <em>Stereo Type</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.core.model.core.impl.NgtPackageImpl#getChild <em>Child</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.core.model.core.impl.NgtPackageImpl#getParent <em>Parent</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.core.model.core.impl.NgtPackageImpl#getNodes <em>Nodes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NgtPackageImpl extends MinimalEObjectImpl.Container implements NgtPackage {
	/**
	 * The default value of the '{@link #getUid() <em>Uid</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUid()
	 * @generated
	 * @ordered
	 */
	protected static final String UID_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getUid() <em>Uid</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUid()
	 * @generated
	 * @ordered
	 */
	protected String uid = UID_EDEFAULT;

	/**
	 * The default value of the '{@link #getStereoType() <em>Stereo Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStereoType()
	 * @generated
	 * @ordered
	 */
	protected static final String STEREO_TYPE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getStereoType() <em>Stereo Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStereoType()
	 * @generated
	 * @ordered
	 */
	protected String stereoType = STEREO_TYPE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getChild() <em>Child</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getChild()
	 * @generated
	 * @ordered
	 */
	protected NgtPackage child;

	/**
	 * The cached value of the '{@link #getNodes() <em>Nodes</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNodes()
	 * @generated
	 * @ordered
	 */
	protected EList<NgtNode> nodes;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NgtPackageImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return CorePackage.Literals.NGT_PACKAGE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getUid() {
		return uid;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setUid(String newUid) {
		String oldUid = uid;
		uid = newUid;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CorePackage.NGT_PACKAGE__UID, oldUid, uid));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getStereoType() {
		return stereoType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setStereoType(String newStereoType) {
		String oldStereoType = stereoType;
		stereoType = newStereoType;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CorePackage.NGT_PACKAGE__STEREO_TYPE, oldStereoType, stereoType));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NgtPackage getChild() {
		return child;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetChild(NgtPackage newChild, NotificationChain msgs) {
		NgtPackage oldChild = child;
		child = newChild;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CorePackage.NGT_PACKAGE__CHILD, oldChild, newChild);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setChild(NgtPackage newChild) {
		if (newChild != child) {
			NotificationChain msgs = null;
			if (child != null)
				msgs = ((InternalEObject)child).eInverseRemove(this, CorePackage.NGT_PACKAGE__PARENT, NgtPackage.class, msgs);
			if (newChild != null)
				msgs = ((InternalEObject)newChild).eInverseAdd(this, CorePackage.NGT_PACKAGE__PARENT, NgtPackage.class, msgs);
			msgs = basicSetChild(newChild, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CorePackage.NGT_PACKAGE__CHILD, newChild, newChild));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NgtPackage getParent() {
		if (eContainerFeatureID() != CorePackage.NGT_PACKAGE__PARENT) return null;
		return (NgtPackage)eInternalContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<NgtNode> getNodes() {
		if (nodes == null) {
			nodes = new EObjectResolvingEList<NgtNode>(NgtNode.class, this, CorePackage.NGT_PACKAGE__NODES);
		}
		return nodes;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__CHILD:
				if (child != null)
					msgs = ((InternalEObject)child).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CorePackage.NGT_PACKAGE__CHILD, null, msgs);
				return basicSetChild((NgtPackage)otherEnd, msgs);
			case CorePackage.NGT_PACKAGE__PARENT:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return eBasicSetContainer(otherEnd, CorePackage.NGT_PACKAGE__PARENT, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__CHILD:
				return basicSetChild(null, msgs);
			case CorePackage.NGT_PACKAGE__PARENT:
				return eBasicSetContainer(null, CorePackage.NGT_PACKAGE__PARENT, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID()) {
			case CorePackage.NGT_PACKAGE__PARENT:
				return eInternalContainer().eInverseRemove(this, CorePackage.NGT_PACKAGE__CHILD, NgtPackage.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__UID:
				return getUid();
			case CorePackage.NGT_PACKAGE__STEREO_TYPE:
				return getStereoType();
			case CorePackage.NGT_PACKAGE__CHILD:
				return getChild();
			case CorePackage.NGT_PACKAGE__PARENT:
				return getParent();
			case CorePackage.NGT_PACKAGE__NODES:
				return getNodes();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__UID:
				setUid((String)newValue);
				return;
			case CorePackage.NGT_PACKAGE__STEREO_TYPE:
				setStereoType((String)newValue);
				return;
			case CorePackage.NGT_PACKAGE__CHILD:
				setChild((NgtPackage)newValue);
				return;
			case CorePackage.NGT_PACKAGE__NODES:
				getNodes().clear();
				getNodes().addAll((Collection<? extends NgtNode>)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__UID:
				setUid(UID_EDEFAULT);
				return;
			case CorePackage.NGT_PACKAGE__STEREO_TYPE:
				setStereoType(STEREO_TYPE_EDEFAULT);
				return;
			case CorePackage.NGT_PACKAGE__CHILD:
				setChild((NgtPackage)null);
				return;
			case CorePackage.NGT_PACKAGE__NODES:
				getNodes().clear();
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case CorePackage.NGT_PACKAGE__UID:
				return UID_EDEFAULT == null ? uid != null : !UID_EDEFAULT.equals(uid);
			case CorePackage.NGT_PACKAGE__STEREO_TYPE:
				return STEREO_TYPE_EDEFAULT == null ? stereoType != null : !STEREO_TYPE_EDEFAULT.equals(stereoType);
			case CorePackage.NGT_PACKAGE__CHILD:
				return child != null;
			case CorePackage.NGT_PACKAGE__PARENT:
				return getParent() != null;
			case CorePackage.NGT_PACKAGE__NODES:
				return nodes != null && !nodes.isEmpty();
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (uid: ");
		result.append(uid);
		result.append(", stereoType: ");
		result.append(stereoType);
		result.append(')');
		return result.toString();
	}

} //NgtPackageImpl
