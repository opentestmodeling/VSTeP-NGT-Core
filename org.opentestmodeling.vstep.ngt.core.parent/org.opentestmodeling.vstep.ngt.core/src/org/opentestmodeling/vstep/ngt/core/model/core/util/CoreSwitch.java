/**
 */
package org.opentestmodeling.vstep.ngt.core.model.core.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.opentestmodeling.vstep.ngt.core.model.core.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.opentestmodeling.vstep.ngt.core.model.core.CorePackage
 * @generated
 */
public class CoreSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static CorePackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CoreSwitch() {
		if (modelPackage == null) {
			modelPackage = CorePackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
			case CorePackage.NGT_OBJECT: {
				NgtObject ngtObject = (NgtObject)theEObject;
				T result = caseNgtObject(ngtObject);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_PACKAGE: {
				NgtPackage ngtPackage = (NgtPackage)theEObject;
				T result = caseNgtPackage(ngtPackage);
				if (result == null) result = caseNgtObject(ngtPackage);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_NODE: {
				NgtNode ngtNode = (NgtNode)theEObject;
				T result = caseNgtNode(ngtNode);
				if (result == null) result = caseNgtObject(ngtNode);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_TARGET: {
				NgtTarget ngtTarget = (NgtTarget)theEObject;
				T result = caseNgtTarget(ngtTarget);
				if (result == null) result = caseNgtNode(ngtTarget);
				if (result == null) result = caseNgtObject(ngtTarget);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_VIEWPOINT: {
				NgtViewpoint ngtViewpoint = (NgtViewpoint)theEObject;
				T result = caseNgtViewpoint(ngtViewpoint);
				if (result == null) result = caseNgtNode(ngtViewpoint);
				if (result == null) result = caseNgtObject(ngtViewpoint);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_QUALITY_RISK: {
				NgtQualityRisk ngtQualityRisk = (NgtQualityRisk)theEObject;
				T result = caseNgtQualityRisk(ngtQualityRisk);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_ARROW: {
				NgtArrow ngtArrow = (NgtArrow)theEObject;
				T result = caseNgtArrow(ngtArrow);
				if (result == null) result = caseNgtObject(ngtArrow);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_INHERITANCE: {
				NgtInheritance ngtInheritance = (NgtInheritance)theEObject;
				T result = caseNgtInheritance(ngtInheritance);
				if (result == null) result = caseNgtArrow(ngtInheritance);
				if (result == null) result = caseNgtObject(ngtInheritance);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_RETAIN: {
				NgtRetain ngtRetain = (NgtRetain)theEObject;
				T result = caseNgtRetain(ngtRetain);
				if (result == null) result = caseNgtArrow(ngtRetain);
				if (result == null) result = caseNgtObject(ngtRetain);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			case CorePackage.NGT_DEPENDENCY: {
				NgtDependency ngtDependency = (NgtDependency)theEObject;
				T result = caseNgtDependency(ngtDependency);
				if (result == null) result = caseNgtArrow(ngtDependency);
				if (result == null) result = caseNgtObject(ngtDependency);
				if (result == null) result = defaultCase(theEObject);
				return result;
			}
			default: return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Object</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Object</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtObject(NgtObject object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Package</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Package</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtPackage(NgtPackage object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Node</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Node</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtNode(NgtNode object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Target</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Target</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtTarget(NgtTarget object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Viewpoint</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Viewpoint</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtViewpoint(NgtViewpoint object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Quality Risk</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Quality Risk</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtQualityRisk(NgtQualityRisk object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Arrow</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Arrow</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtArrow(NgtArrow object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Inheritance</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Inheritance</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtInheritance(NgtInheritance object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Retain</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Retain</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtRetain(NgtRetain object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Ngt Dependency</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Ngt Dependency</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNgtDependency(NgtDependency object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //CoreSwitch
